using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Options;
using SixLabors.ImageSharp;
using SixLabors.ImageSharp.Formats;
using SixLabors.ImageSharp.Processing;
using System;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using tusdotnet.Models.Configuration;
using XtraUpload.Domain;
using XtraUpload.Protos;

namespace XtraUpload.StorageManager.Service
{
    public class AvatarUploadService : BaseFileUpload
    {

        public AvatarUploadService(
            gFileManager.gFileManagerClient managerClient,
            IOptionsMonitor<UploadOptions> uploadOpts,
            ILogger<FileUploadService> logger
            ) : base(managerClient, uploadOpts, logger, "/avatarupload")
        {
        }

        /// <summary>
        /// Handle the upload completion
        /// </summary>
        protected override async Task OnUploadCompleted(FileCompleteContext ctx)
        {
            try
            {
                // Get the connected client
                var gUserResponse = await _fileMngClient.GetUserAsync(new gUserRequest());
                if (gUserResponse == null)
                {
                    _logger.LogError("Unknown error occured while requesting user info");
                    ctx.HttpContext.Response.StatusCode = 400;
                    return;
                }
                if (gUserResponse.Status.Status != Protos.RequestStatus.Success)
                {
                    _logger.LogError(gUserResponse.Status.Message);
                    ctx.HttpContext.Response.StatusCode = 400;
                    return;
                }
                // Move files to user's folder
                MoveFilesToFolder(ctx, gUserResponse.User);
                // Update db
                string avatarUrl = await RequestUpdateDb(ctx, gUserResponse.User);
                // Attach avatar info to header, because tus send 204 (no response body is allowed)
                ctx.HttpContext.Response.Headers.Add("upload-data", Helpers.JsonSerialize(new { AvatarUrl = avatarUrl }));
            }
            catch (Exception _ex)
            {
                _logger.LogError(_ex.Message);
                ctx.HttpContext.Response.StatusCode = 500;
            }
        }

        /// <summary>
        ///  Update db
        /// </summary>
        private async Task<string> RequestUpdateDb(FileCompleteContext ctx, gUser user)
        {
            var avatarUrl = ctx.HttpContext.Request.Scheme + "://" + ctx.HttpContext.Request.Host.Value + "/api/file/avatar/" + user.Id;
            var response = await _fileMngClient.SaveAvatarAsync(new gSaveAvatarRequest() { AvatarUrl = avatarUrl, UserId = user.Id });
            if (response == null)
            {
                _logger.LogError("Unknown error occured while requesting user info");
            }
            if (response.Status.Status != Protos.RequestStatus.Success)
            {
                _logger.LogError(response.Status.Message);
                ctx.HttpContext.Response.StatusCode = 400;
            }
            return avatarUrl;
        }

        /// <summary>
        /// Moves the uploaded files to the avatar folder
        /// tus protocol puts the uploaded files into the store, XtraUpload move those files to the user directory
        /// </summary>
        private void MoveFilesToFolder(FileCompleteContext ctx, gUser user)
        {
            string userFolder = Path.Combine(_uploadOpts.CurrentValue.UploadPath, user.Id);
            string avatarFolder = Path.Combine(userFolder, "avatar");
            // Create user root directory
            if (!Directory.Exists(userFolder))
            {
                Directory.CreateDirectory(userFolder);
            }
            // Creat avatar directory
            if (!Directory.Exists(avatarFolder))
            {
                Directory.CreateDirectory(avatarFolder);
            }
            // move avatar to the avatar folder
            DirectoryInfo directoryInfo = new DirectoryInfo(_uploadOpts.CurrentValue.UploadPath);
            foreach (FileInfo file in directoryInfo.GetFiles(ctx.FileId + "*"))
            {
                // Exemple of file names generated by tus are (...69375.metadata, ...69375.uploadlength ...)
                string[] subNames = file.Name.Split('.');
                string subName = subNames.Count() == 2 ? '.' + subNames[1] : "orig.avatar.png";
                File.Move(file.FullName, Path.Combine(avatarFolder, subName), true);
            }
            // crop image
            string avatarPath = Path.Combine(avatarFolder, "orig.avatar.png");
            using FileStream smallavatar = new FileStream(Path.Combine(avatarFolder, "avatar.png"), FileMode.Create);
            using Image image = Image.Load(File.ReadAllBytes(avatarPath), out IImageFormat format);

            using Image smallthumbnail = image.Clone(i => i.Resize(128, 128).Crop(new Rectangle(0, 0, 128, 128)));
            smallthumbnail.Save(smallavatar, format);

            return;
        }

    }
}
